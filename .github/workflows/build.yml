name: CI

on:
  # Allows manual triggering
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create new release'
        required: true
        type: boolean
  push: {}
  pull_request: {}

env:
 BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:

  windows-latest-cmake:
    runs-on: windows-latest

    continue-on-error: true

    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install cuda-toolkit
        id: cuda_toolkit
        uses: Jimver/cuda-toolkit@v0.2.11
        with:
          cuda: '12.2.0'
          method: 'local'

      - name: Peek cuda-toolkit info
        id: peek_cuda_toolkit
        run: |
          echo "Installed cuda version is: ${{steps.cuda-toolkit.outputs.cuda}}"
          echo "Cuda install location: ${{steps.cuda-toolkit.outputs.CUDA_PATH}}"
          nvcc -V

      - name: Build
        id: cmake_build
        run: |
          cd stable-diffusion.cpp
          mkdir build
          cd build
          cmake .. -DSD_CUBLAS=ON
          cmake --build . --config Release

      - name: Get commit hash
        id: commit
        if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/main' ) || github.event.inputs.create_release == 'true' }}
        uses: pr-mpt/actions-commit-hash@v2

      - name: Pack artifacts
        id: pack_artifacts
        if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/main' ) || github.event.inputs.create_release == 'true' }}
        run: |
          Rename-Item -Path .\stable-diffusion.cpp\build\bin\Release\sd.exe -NewName sd-cuda12.exe
          7z a stable-diffusion-${{ env.BRANCH_NAME }}-${{ steps.commit.outputs.short }}-bin-win-cuda12-x64.zip .\stable-diffusion.cpp\build\bin\Release\sd-cuda12.exe

      - name: Upload artifacts
        if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/main' ) || github.event.inputs.create_release == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          path: |
            stable-diffusion-${{ env.BRANCH_NAME }}-${{ steps.commit.outputs.short }}-bin-win-cuda12-x64.zip

  release:
    if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/main' ) || github.event.inputs.create_release == 'true' }}

    runs-on: ubuntu-latest

    needs:
      - windows-latest-cmake

    steps:
      - name: Download artifacts
        id: download-artifact
        uses: actions/download-artifact@v3

      - name: Get commit hash
        id: commit
        uses: pr-mpt/actions-commit-hash@v2

      - name: Create release
        id: create_release
        uses: anzz1/action-create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.BRANCH_NAME }}-${{ steps.commit.outputs.short }}

      - name: Upload release
        id: upload_release
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const path = require('path');
            const fs = require('fs');
            const release_id = '${{ steps.create_release.outputs.id }}';
            for (let file of await fs.readdirSync('./artifact')) {
              if (path.extname(file) === '.zip') {
                console.log('uploadReleaseAsset', file);
                await github.repos.uploadReleaseAsset({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: release_id,
                  name: file,
                  data: await fs.readFileSync(`./artifact/${file}`)
                });
              }
            }
